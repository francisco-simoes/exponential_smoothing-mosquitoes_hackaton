{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Utils"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>.container { width:100% !important; }</style>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# import stuff here\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "from IPython.core.display import display, HTML\n",
    "display(HTML(\"<style>.container { width:100% !important; }</style>\"))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import boto3\n",
    "import pandas as pd\n",
    "from sagemaker import get_execution_role\n",
    "\n",
    "def list_data(folder):\n",
    "    \"\"\"\n",
    "    List all available data sets in the folder\n",
    "    \n",
    "    \"\"\"\n",
    "    s3 = boto3.resource('s3')\n",
    "    bucket='cp-hackathon-data'\n",
    "    hackathon_data = s3.Bucket(bucket)\n",
    "    keys = []\n",
    "    for obj in hackathon_data.objects.filter(Prefix=folder):\n",
    "        keys.append(obj.key)\n",
    "    return keys\n",
    "def get_data(key):\n",
    "    role = get_execution_role()\n",
    "    bucket='cp-hackathon-data'\n",
    "    data_location = 's3://{}/{}'.format(bucket, key)\n",
    "    return pd.read_csv(data_location)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['RedCross/',\n",
       " 'RedCross/ovitrap_data.csv',\n",
       " 'RedCross/ovitrap_data_monthly_province.csv',\n",
       " 'RedCross/weather_data_monthly_province.csv']"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "list_data('RedCross')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Importing weather DataFrame"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 123,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Couldn't call 'get_role' to get Role ARN from role name cp-sagemaker-hackathon-role to get Role path.\n"
     ]
    }
   ],
   "source": [
    "weather = get_data('RedCross/weather_data_monthly_province.csv').sort_values(['adm_level', 'date'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>adm_level</th>\n",
       "      <th>date</th>\n",
       "      <th>JAXA_GPM_L3_GSMaP_v6_operational_hourlyPrecipRateGC</th>\n",
       "      <th>MODIS_006_MOD11A1_LST_Day_1km</th>\n",
       "      <th>MODIS_006_MOD11A1_LST_Night_1km</th>\n",
       "      <th>MODIS_006_MYD13A1_EVI</th>\n",
       "      <th>NASA_FLDAS_NOAH01_C_GL_M_V001_Qair_f_tavg</th>\n",
       "      <th>NASA_FLDAS_NOAH01_C_GL_M_V001_Rainf_f_tavg</th>\n",
       "      <th>NASA_FLDAS_NOAH01_C_GL_M_V001_SoilMoi00_10cm_tavg</th>\n",
       "      <th>NASA_FLDAS_NOAH01_C_GL_M_V001_SoilTemp00_10cm_tavg</th>\n",
       "      <th>NASA_FLDAS_NOAH01_C_GL_M_V001_Tair_f_tavg</th>\n",
       "      <th>NASA_FLDAS_NOAH01_C_GL_M_V001_Wind_f_tavg</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Abra</td>\n",
       "      <td>2012-06-01</td>\n",
       "      <td>0.430867</td>\n",
       "      <td>15043.5540</td>\n",
       "      <td>14639.858</td>\n",
       "      <td>4180.8150</td>\n",
       "      <td>0.016763</td>\n",
       "      <td>0.000172</td>\n",
       "      <td>0.425508</td>\n",
       "      <td>296.31796</td>\n",
       "      <td>297.09457</td>\n",
       "      <td>4.977150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Abra</td>\n",
       "      <td>2012-07-01</td>\n",
       "      <td>0.373154</td>\n",
       "      <td>15020.1080</td>\n",
       "      <td>14632.604</td>\n",
       "      <td>3662.6284</td>\n",
       "      <td>0.016362</td>\n",
       "      <td>0.000186</td>\n",
       "      <td>0.428822</td>\n",
       "      <td>295.84708</td>\n",
       "      <td>296.72488</td>\n",
       "      <td>3.478785</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Abra</td>\n",
       "      <td>2012-08-01</td>\n",
       "      <td>0.620665</td>\n",
       "      <td>14917.0320</td>\n",
       "      <td>14486.046</td>\n",
       "      <td>3183.5750</td>\n",
       "      <td>0.016541</td>\n",
       "      <td>0.000245</td>\n",
       "      <td>0.432180</td>\n",
       "      <td>295.66570</td>\n",
       "      <td>296.15265</td>\n",
       "      <td>6.328744</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Abra</td>\n",
       "      <td>2012-09-01</td>\n",
       "      <td>0.106620</td>\n",
       "      <td>14980.0205</td>\n",
       "      <td>14696.892</td>\n",
       "      <td>4785.5340</td>\n",
       "      <td>0.015967</td>\n",
       "      <td>0.000099</td>\n",
       "      <td>0.419719</td>\n",
       "      <td>296.26144</td>\n",
       "      <td>296.81122</td>\n",
       "      <td>3.009687</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Abra</td>\n",
       "      <td>2012-10-01</td>\n",
       "      <td>0.053113</td>\n",
       "      <td>14986.9280</td>\n",
       "      <td>14666.716</td>\n",
       "      <td>4770.0083</td>\n",
       "      <td>0.014127</td>\n",
       "      <td>0.000039</td>\n",
       "      <td>0.390687</td>\n",
       "      <td>295.36737</td>\n",
       "      <td>295.53925</td>\n",
       "      <td>4.924677</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  adm_level        date  JAXA_GPM_L3_GSMaP_v6_operational_hourlyPrecipRateGC  \\\n",
       "0      Abra  2012-06-01                                           0.430867     \n",
       "1      Abra  2012-07-01                                           0.373154     \n",
       "2      Abra  2012-08-01                                           0.620665     \n",
       "3      Abra  2012-09-01                                           0.106620     \n",
       "4      Abra  2012-10-01                                           0.053113     \n",
       "\n",
       "   MODIS_006_MOD11A1_LST_Day_1km  MODIS_006_MOD11A1_LST_Night_1km  \\\n",
       "0                     15043.5540                        14639.858   \n",
       "1                     15020.1080                        14632.604   \n",
       "2                     14917.0320                        14486.046   \n",
       "3                     14980.0205                        14696.892   \n",
       "4                     14986.9280                        14666.716   \n",
       "\n",
       "   MODIS_006_MYD13A1_EVI  NASA_FLDAS_NOAH01_C_GL_M_V001_Qair_f_tavg  \\\n",
       "0              4180.8150                                   0.016763   \n",
       "1              3662.6284                                   0.016362   \n",
       "2              3183.5750                                   0.016541   \n",
       "3              4785.5340                                   0.015967   \n",
       "4              4770.0083                                   0.014127   \n",
       "\n",
       "   NASA_FLDAS_NOAH01_C_GL_M_V001_Rainf_f_tavg  \\\n",
       "0                                    0.000172   \n",
       "1                                    0.000186   \n",
       "2                                    0.000245   \n",
       "3                                    0.000099   \n",
       "4                                    0.000039   \n",
       "\n",
       "   NASA_FLDAS_NOAH01_C_GL_M_V001_SoilMoi00_10cm_tavg  \\\n",
       "0                                           0.425508   \n",
       "1                                           0.428822   \n",
       "2                                           0.432180   \n",
       "3                                           0.419719   \n",
       "4                                           0.390687   \n",
       "\n",
       "   NASA_FLDAS_NOAH01_C_GL_M_V001_SoilTemp00_10cm_tavg  \\\n",
       "0                                          296.31796    \n",
       "1                                          295.84708    \n",
       "2                                          295.66570    \n",
       "3                                          296.26144    \n",
       "4                                          295.36737    \n",
       "\n",
       "   NASA_FLDAS_NOAH01_C_GL_M_V001_Tair_f_tavg  \\\n",
       "0                                  297.09457   \n",
       "1                                  296.72488   \n",
       "2                                  296.15265   \n",
       "3                                  296.81122   \n",
       "4                                  295.53925   \n",
       "\n",
       "   NASA_FLDAS_NOAH01_C_GL_M_V001_Wind_f_tavg  \n",
       "0                                   4.977150  \n",
       "1                                   3.478785  \n",
       "2                                   6.328744  \n",
       "3                                   3.009687  \n",
       "4                                   4.924677  "
      ]
     },
     "execution_count": 124,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "weather.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Rename the columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 125,
   "metadata": {},
   "outputs": [],
   "source": [
    "weather.rename(mapper={\n",
    "    'JAXA_GPM_L3_GSMaP_v6_operational_hourlyPrecipRateGC':'jaxa_rainfall',\n",
    "    'MODIS_006_MOD11A1_LST_Day_1km': 'land_surface_temperature_day',\n",
    "    'MODIS_006_MYD13A1_EVI':'vegetation_index',\n",
    "    'MODIS_006_MOD11A1_LST_Night_1km': 'land_surface_temperature_night',\n",
    "    'NASA_FLDAS_NOAH01_C_GL_M_V001_Qair_f_tavg': 'specific_humidity',\n",
    "    'NASA_FLDAS_NOAH01_C_GL_M_V001_Rainf_f_tavg': 'fldas_rainfall',\n",
    "    'NASA_FLDAS_NOAH01_C_GL_M_V001_SoilMoi00_10cm_tavg': 'soil_moisture',\n",
    "    'NASA_FLDAS_NOAH01_C_GL_M_V001_SoilTemp00_10cm_tavg': 'soil_temperature',\n",
    "    'NASA_FLDAS_NOAH01_C_GL_M_V001_Tair_f_tavg': 'air_temperature',\n",
    "    'NASA_FLDAS_NOAH01_C_GL_M_V001_Wind_f_tavg': 'wind_speed'\n",
    "                      },\n",
    "               axis=1,\n",
    "               inplace=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Change type of date column"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 128,
   "metadata": {},
   "outputs": [],
   "source": [
    "weather['date'] = pd.to_datetime(weather['date']).dt.date"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 129,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(6873, 12)"
      ]
     },
     "execution_count": 129,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "weather.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 130,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>jaxa_rainfall</th>\n",
       "      <th>land_surface_temperature_day</th>\n",
       "      <th>land_surface_temperature_night</th>\n",
       "      <th>vegetation_index</th>\n",
       "      <th>specific_humidity</th>\n",
       "      <th>fldas_rainfall</th>\n",
       "      <th>soil_moisture</th>\n",
       "      <th>soil_temperature</th>\n",
       "      <th>air_temperature</th>\n",
       "      <th>wind_speed</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>6873.000000</td>\n",
       "      <td>6865.000000</td>\n",
       "      <td>6780.000000</td>\n",
       "      <td>6873.000000</td>\n",
       "      <td>6794.000000</td>\n",
       "      <td>6.789000e+03</td>\n",
       "      <td>6794.000000</td>\n",
       "      <td>6794.000000</td>\n",
       "      <td>6794.000000</td>\n",
       "      <td>6794.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>0.086979</td>\n",
       "      <td>15083.833196</td>\n",
       "      <td>14732.646723</td>\n",
       "      <td>4440.147675</td>\n",
       "      <td>0.016440</td>\n",
       "      <td>8.814848e-05</td>\n",
       "      <td>0.372309</td>\n",
       "      <td>298.244164</td>\n",
       "      <td>298.417811</td>\n",
       "      <td>4.636927</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.091355</td>\n",
       "      <td>146.513899</td>\n",
       "      <td>99.953498</td>\n",
       "      <td>839.550436</td>\n",
       "      <td>0.001409</td>\n",
       "      <td>6.713168e-05</td>\n",
       "      <td>0.059160</td>\n",
       "      <td>2.058478</td>\n",
       "      <td>1.846001</td>\n",
       "      <td>1.583416</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>14647.812500</td>\n",
       "      <td>13109.000000</td>\n",
       "      <td>594.618840</td>\n",
       "      <td>0.009271</td>\n",
       "      <td>1.095434e-07</td>\n",
       "      <td>0.153724</td>\n",
       "      <td>289.207000</td>\n",
       "      <td>288.679400</td>\n",
       "      <td>1.787517</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>0.025676</td>\n",
       "      <td>14996.101000</td>\n",
       "      <td>14686.327000</td>\n",
       "      <td>4080.070800</td>\n",
       "      <td>0.015718</td>\n",
       "      <td>3.872740e-05</td>\n",
       "      <td>0.347887</td>\n",
       "      <td>297.212817</td>\n",
       "      <td>297.567623</td>\n",
       "      <td>3.422727</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>0.061672</td>\n",
       "      <td>15065.449000</td>\n",
       "      <td>14745.820000</td>\n",
       "      <td>4562.127000</td>\n",
       "      <td>0.016677</td>\n",
       "      <td>7.695034e-05</td>\n",
       "      <td>0.395176</td>\n",
       "      <td>298.266665</td>\n",
       "      <td>298.762160</td>\n",
       "      <td>4.354069</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>0.116049</td>\n",
       "      <td>15134.880000</td>\n",
       "      <td>14795.490000</td>\n",
       "      <td>4969.701000</td>\n",
       "      <td>0.017446</td>\n",
       "      <td>1.202518e-04</td>\n",
       "      <td>0.414963</td>\n",
       "      <td>299.186415</td>\n",
       "      <td>299.638588</td>\n",
       "      <td>5.661308</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>0.885880</td>\n",
       "      <td>15795.163000</td>\n",
       "      <td>15049.094000</td>\n",
       "      <td>6578.051000</td>\n",
       "      <td>0.019830</td>\n",
       "      <td>6.109239e-04</td>\n",
       "      <td>0.440366</td>\n",
       "      <td>306.511900</td>\n",
       "      <td>303.114500</td>\n",
       "      <td>12.215397</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       jaxa_rainfall  land_surface_temperature_day  \\\n",
       "count    6873.000000                   6865.000000   \n",
       "mean        0.086979                  15083.833196   \n",
       "std         0.091355                    146.513899   \n",
       "min         0.000000                  14647.812500   \n",
       "25%         0.025676                  14996.101000   \n",
       "50%         0.061672                  15065.449000   \n",
       "75%         0.116049                  15134.880000   \n",
       "max         0.885880                  15795.163000   \n",
       "\n",
       "       land_surface_temperature_night  vegetation_index  specific_humidity  \\\n",
       "count                     6780.000000       6873.000000        6794.000000   \n",
       "mean                     14732.646723       4440.147675           0.016440   \n",
       "std                         99.953498        839.550436           0.001409   \n",
       "min                      13109.000000        594.618840           0.009271   \n",
       "25%                      14686.327000       4080.070800           0.015718   \n",
       "50%                      14745.820000       4562.127000           0.016677   \n",
       "75%                      14795.490000       4969.701000           0.017446   \n",
       "max                      15049.094000       6578.051000           0.019830   \n",
       "\n",
       "       fldas_rainfall  soil_moisture  soil_temperature  air_temperature  \\\n",
       "count    6.789000e+03    6794.000000       6794.000000      6794.000000   \n",
       "mean     8.814848e-05       0.372309        298.244164       298.417811   \n",
       "std      6.713168e-05       0.059160          2.058478         1.846001   \n",
       "min      1.095434e-07       0.153724        289.207000       288.679400   \n",
       "25%      3.872740e-05       0.347887        297.212817       297.567623   \n",
       "50%      7.695034e-05       0.395176        298.266665       298.762160   \n",
       "75%      1.202518e-04       0.414963        299.186415       299.638588   \n",
       "max      6.109239e-04       0.440366        306.511900       303.114500   \n",
       "\n",
       "        wind_speed  \n",
       "count  6794.000000  \n",
       "mean      4.636927  \n",
       "std       1.583416  \n",
       "min       1.787517  \n",
       "25%       3.422727  \n",
       "50%       4.354069  \n",
       "75%       5.661308  \n",
       "max      12.215397  "
      ]
     },
     "execution_count": 130,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "weather.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 131,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "datetime.date(2012, 6, 1)"
      ]
     },
     "execution_count": 131,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "weather.date.min()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'2018-12-01'"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "weather.date.max()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['Abra', 'Agusan del Norte', 'Agusan del Sur', 'Aklan', 'Albay',\n",
       "       'Antique', 'Apayao', 'Aurora', 'Basilan', 'Bataan', 'Batanes',\n",
       "       'Batangas', 'Benguet', 'Biliran', 'Bohol', 'Bukidnon', 'Bulacan',\n",
       "       'Cagayan', 'Camarines Norte', 'Camarines Sur', 'Camiguin', 'Capiz',\n",
       "       'Catanduanes', 'Cavite', 'Cebu', 'City of Isabela',\n",
       "       'Compostela Valley', 'Cotabato', 'Cotabato City',\n",
       "       'Davao Occidental', 'Davao Oriental', 'Davao del Norte',\n",
       "       'Davao del Sur', 'Dinagat Islands', 'Eastern Samar', 'Guimaras',\n",
       "       'Ifugao', 'Ilocos Norte', 'Ilocos Sur', 'Iloilo', 'Isabela',\n",
       "       'Kalinga', 'La Union', 'Laguna', 'Lanao del Norte',\n",
       "       'Lanao del Sur', 'Leyte', 'Maguindanao', 'Marinduque', 'Masbate',\n",
       "       'Misamis Occidental', 'Misamis Oriental', 'Mountain Province',\n",
       "       'NCR, City of Manila, First District', 'NCR, Fourth District',\n",
       "       'NCR, Second District', 'NCR, Third District', 'Negros Occidental',\n",
       "       'Negros Oriental', 'Northern Samar', 'Nueva Ecija',\n",
       "       'Nueva Vizcaya', 'Occidental Mindoro', 'Oriental Mindoro',\n",
       "       'Palawan', 'Pampanga', 'Pangasinan', 'Quezon', 'Quirino', 'Rizal',\n",
       "       'Romblon', 'Samar', 'Sarangani', 'Siquijor', 'Sorsogon',\n",
       "       'South Cotabato', 'Southern Leyte', 'Sultan Kudarat', 'Sulu',\n",
       "       'Surigao del Norte', 'Surigao del Sur', 'Tarlac', 'Tawi-Tawi',\n",
       "       'Zambales', 'Zamboanga Sibugay', 'Zamboanga del Norte',\n",
       "       'Zamboanga del Sur'], dtype=object)"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "weather.adm_level.unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "87"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(weather.adm_level.unique())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Missing data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "adm_level                          0\n",
       "date                               0\n",
       "jaxa_rainfall                      0\n",
       "land_surface_temperature_day       8\n",
       "land_surface_temperature_night    93\n",
       "vegetation_index                   0\n",
       "specific_humidity                 79\n",
       "fldas_rainfall                    84\n",
       "soil_moisture                     79\n",
       "soil_temperature                  79\n",
       "air_temperature                   79\n",
       "wind_speed                        79\n",
       "dtype: int64"
      ]
     },
     "execution_count": 58,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "weather.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>adm_level</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>NCR, City of Manila, First District</th>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NCR, Fourth District</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NCR, Second District</th>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NCR, Third District</th>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                     date\n",
       "adm_level                                \n",
       "NCR, City of Manila, First District     2\n",
       "NCR, Fourth District                    1\n",
       "NCR, Second District                    2\n",
       "NCR, Third District                     3"
      ]
     },
     "execution_count": 95,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "weather[['adm_level', 'date']].loc[weather.land_surface_temperature_day.isnull()].groupby('adm_level').count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>adm_level</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Aklan</th>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Bataan</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Batangas</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Bulacan</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Camarines Norte</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Camiguin</th>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Capiz</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Cavite</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>City of Isabela</th>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Cotabato</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Cotabato City</th>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Davao del Norte</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Dinagat Islands</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Guimaras</th>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Iloilo</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Kalinga</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>La Union</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Laguna</th>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Lanao del Norte</th>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Lanao del Sur</th>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Maguindanao</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Marinduque</th>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Masbate</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Misamis Occidental</th>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NCR, City of Manila, First District</th>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NCR, Fourth District</th>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NCR, Second District</th>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NCR, Third District</th>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Pampanga</th>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Pangasinan</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Rizal</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Siquijor</th>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Tarlac</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Zambales</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Zamboanga Sibugay</th>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Zamboanga del Norte</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                     date\n",
       "adm_level                                \n",
       "Aklan                                   2\n",
       "Bataan                                  1\n",
       "Batangas                                1\n",
       "Bulacan                                 1\n",
       "Camarines Norte                         1\n",
       "Camiguin                                4\n",
       "Capiz                                   1\n",
       "Cavite                                  1\n",
       "City of Isabela                         3\n",
       "Cotabato                                1\n",
       "Cotabato City                          11\n",
       "Davao del Norte                         1\n",
       "Dinagat Islands                         1\n",
       "Guimaras                                4\n",
       "Iloilo                                  1\n",
       "Kalinga                                 1\n",
       "La Union                                1\n",
       "Laguna                                  2\n",
       "Lanao del Norte                         2\n",
       "Lanao del Sur                           2\n",
       "Maguindanao                             1\n",
       "Marinduque                              2\n",
       "Masbate                                 1\n",
       "Misamis Occidental                      3\n",
       "NCR, City of Manila, First District     8\n",
       "NCR, Fourth District                    5\n",
       "NCR, Second District                    8\n",
       "NCR, Third District                     8\n",
       "Pampanga                                3\n",
       "Pangasinan                              1\n",
       "Rizal                                   1\n",
       "Siquijor                                5\n",
       "Tarlac                                  1\n",
       "Zambales                                1\n",
       "Zamboanga Sibugay                       2\n",
       "Zamboanga del Norte                     1"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "weather[['adm_level', 'date']].loc[weather.land_surface_temperature_night.isnull()].groupby('adm_level').count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>adm_level</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>NCR, City of Manila, First District</th>\n",
       "      <td>79</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                     date\n",
       "adm_level                                \n",
       "NCR, City of Manila, First District    79"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "weather[['adm_level', 'date']].loc[weather.specific_humidity.isnull()].groupby('adm_level').count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>adm_level</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>La Union</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NCR, City of Manila, First District</th>\n",
       "      <td>79</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Tarlac</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Zambales</th>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                     date\n",
       "adm_level                                \n",
       "La Union                                1\n",
       "NCR, City of Manila, First District    79\n",
       "Tarlac                                  1\n",
       "Zambales                                3"
      ]
     },
     "execution_count": 62,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "weather[['adm_level', 'date']].loc[weather.fldas_rainfall.isnull()].groupby('adm_level').count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>adm_level</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>NCR, City of Manila, First District</th>\n",
       "      <td>79</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                     date\n",
       "adm_level                                \n",
       "NCR, City of Manila, First District    79"
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "weather[['adm_level', 'date']].loc[weather.soil_moisture.isnull()].groupby('adm_level').count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>adm_level</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>NCR, City of Manila, First District</th>\n",
       "      <td>79</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                     date\n",
       "adm_level                                \n",
       "NCR, City of Manila, First District    79"
      ]
     },
     "execution_count": 64,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "weather[['adm_level', 'date']].loc[weather.soil_temperature.isnull()].groupby('adm_level').count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>adm_level</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>NCR, City of Manila, First District</th>\n",
       "      <td>79</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                     date\n",
       "adm_level                                \n",
       "NCR, City of Manila, First District    79"
      ]
     },
     "execution_count": 65,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "weather[['adm_level', 'date']].loc[weather.air_temperature.isnull()].groupby('adm_level').count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>adm_level</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>NCR, City of Manila, First District</th>\n",
       "      <td>79</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                     date\n",
       "adm_level                                \n",
       "NCR, City of Manila, First District    79"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "weather[['adm_level', 'date']].loc[weather.wind_speed.isnull()].groupby('adm_level').count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 133,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>adm_level</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Empty DataFrame\n",
       "Columns: [date]\n",
       "Index: []"
      ]
     },
     "execution_count": 133,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "weather[['adm_level', 'date']].loc[weather.vegetation_index.isnull()].groupby('adm_level').count()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Distributions\n",
    "Comparing the distribution of features in Basilan (low mosquito abundance) and Pangansinan (high mosquito abundance)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>adm_level</th>\n",
       "      <th>date</th>\n",
       "      <th>jaxa_rainfall</th>\n",
       "      <th>land_surface_temperature_day</th>\n",
       "      <th>land_surface_temperature_night</th>\n",
       "      <th>vegetation_index</th>\n",
       "      <th>specific_humidity</th>\n",
       "      <th>fldas_rainfall</th>\n",
       "      <th>soil_moisture</th>\n",
       "      <th>soil_temperature</th>\n",
       "      <th>air_temperature</th>\n",
       "      <th>wind_speed</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Abra</td>\n",
       "      <td>2012-06-01</td>\n",
       "      <td>0.430867</td>\n",
       "      <td>15043.554</td>\n",
       "      <td>14639.858</td>\n",
       "      <td>4180.815</td>\n",
       "      <td>0.016763</td>\n",
       "      <td>0.000172</td>\n",
       "      <td>0.425508</td>\n",
       "      <td>296.31796</td>\n",
       "      <td>297.09457</td>\n",
       "      <td>4.97715</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  adm_level       date  jaxa_rainfall  land_surface_temperature_day  \\\n",
       "0      Abra 2012-06-01       0.430867                     15043.554   \n",
       "\n",
       "   land_surface_temperature_night  vegetation_index  specific_humidity  \\\n",
       "0                       14639.858          4180.815           0.016763   \n",
       "\n",
       "   fldas_rainfall  soil_moisture  soil_temperature  air_temperature  \\\n",
       "0        0.000172       0.425508         296.31796        297.09457   \n",
       "\n",
       "   wind_speed  \n",
       "0     4.97715  "
      ]
     },
     "execution_count": 96,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "weather.head(1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7fa6f3d6b4a8>"
      ]
     },
     "execution_count": 71,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.set_context({\"figure.figsize\": (10, 6)})\n",
    "sns.boxplot(x='adm_level', y='jaxa_rainfall', data=weather.loc[weather.adm_level.isin(['Basilan', 'Pangasinan'])])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7fa6f3cfe6a0>"
      ]
     },
     "execution_count": 73,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.boxplot(x='adm_level', y='land_surface_temperature_day', data=weather.loc[weather.adm_level.isin(['Basilan', 'Pangasinan'])])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7fa6f3c6b908>"
      ]
     },
     "execution_count": 74,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.boxplot(x='adm_level', y='land_surface_temperature_night', data=weather.loc[weather.adm_level.isin(['Basilan', 'Pangasinan'])])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7fa6f3c504e0>"
      ]
     },
     "execution_count": 75,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.boxplot(x='adm_level', y='vegetation_index', data=weather.loc[weather.adm_level.isin(['Basilan', 'Pangasinan'])])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7fa6f38fb0f0>"
      ]
     },
     "execution_count": 82,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.boxplot(x='adm_level', y='specific_humidity', data=weather.loc[weather.adm_level.isin(['Basilan', 'Pangasinan'])])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7fa6f386b710>"
      ]
     },
     "execution_count": 83,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.boxplot(x='adm_level', y='soil_moisture', data=weather.loc[weather.adm_level.isin(['Basilan', 'Pangasinan'])])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7fa6f386b400>"
      ]
     },
     "execution_count": 84,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.boxplot(x='adm_level', y='soil_temperature', data=weather.loc[weather.adm_level.isin(['Basilan', 'Pangasinan'])])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7fa6f37b7080>"
      ]
     },
     "execution_count": 85,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.boxplot(x='adm_level', y='air_temperature', data=weather.loc[weather.adm_level.isin(['Basilan', 'Pangasinan'])])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7fa6f3725b70>"
      ]
     },
     "execution_count": 86,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.boxplot(x='adm_level', y='wind_speed', data=weather.loc[weather.adm_level.isin(['Basilan', 'Pangasinan'])])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Time series view"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 112,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>adm_level</th>\n",
       "      <th>date</th>\n",
       "      <th>jaxa_rainfall</th>\n",
       "      <th>land_surface_temperature_day</th>\n",
       "      <th>land_surface_temperature_night</th>\n",
       "      <th>vegetation_index</th>\n",
       "      <th>specific_humidity</th>\n",
       "      <th>fldas_rainfall</th>\n",
       "      <th>soil_moisture</th>\n",
       "      <th>soil_temperature</th>\n",
       "      <th>air_temperature</th>\n",
       "      <th>wind_speed</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Abra</td>\n",
       "      <td>2012-06-01</td>\n",
       "      <td>0.430867</td>\n",
       "      <td>15043.554</td>\n",
       "      <td>14639.858</td>\n",
       "      <td>4180.815</td>\n",
       "      <td>0.016763</td>\n",
       "      <td>0.000172</td>\n",
       "      <td>0.425508</td>\n",
       "      <td>296.31796</td>\n",
       "      <td>297.09457</td>\n",
       "      <td>4.97715</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  adm_level       date  jaxa_rainfall  land_surface_temperature_day  \\\n",
       "0      Abra 2012-06-01       0.430867                     15043.554   \n",
       "\n",
       "   land_surface_temperature_night  vegetation_index  specific_humidity  \\\n",
       "0                       14639.858          4180.815           0.016763   \n",
       "\n",
       "   fldas_rainfall  soil_moisture  soil_temperature  air_temperature  \\\n",
       "0        0.000172       0.425508         296.31796        297.09457   \n",
       "\n",
       "   wind_speed  \n",
       "0     4.97715  "
      ]
     },
     "execution_count": 112,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "weather.head(1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 132,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,\n",
       "        17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,\n",
       "        34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50,\n",
       "        51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,\n",
       "        68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78]),\n",
       " <a list of 79 Text xticklabel objects>)"
      ]
     },
     "execution_count": 132,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x576 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.set_context({\"figure.figsize\": (20, 8)})\n",
    "sns.pointplot(x='date', y='jaxa_rainfall', data=weather.loc[weather.adm_level == 'Basilan'])\n",
    "plt.xticks(rotation=90)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python [conda env:root] *",
   "language": "python",
   "name": "conda-root-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
